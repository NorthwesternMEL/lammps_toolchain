#!/usr/bin/env bash

# Script for performing LAMMPS simulations
# This allows to pass the relevant parameters to the LAMMPS input files to
# avoid input files manipulation.
# Can be seen as the 'input file of inpute files', a layer to run clean jobs
#
# Input files performing a given task, e.g., sample preparation are only
# modified if there is a need for a new implementation. Preparing different
# samples is done by using the present scripts and passing different arguments
# to the dedicated LAMMPS input file that remains unchanged.
#
# This is safer, this is cleaner, and long overdue
# It might seem like a hassle to have a script full of parameters populating an
# input file full of parameters. If one wants the changes, they could change the
# input file directly. The issue with this is that it becomes difficult to run
# multiple instances of LAMMPS at the same time without corrupting and
# overwriting data written by another instance. Providing a path to output the
# files is the minimum requirement to avoid overwriting files and we need a
# script to do that. We likely don't want to run 2 identicla instances, so we
# also need to be able to pass different parameters, e.g. diameters, pressures.
# These are not passed directly to LAMMPS, but to the input files. If we hard-
# code input files, we need to modify them each time we want different
# parameters of a similar simulation. It becomes hard for version control.
# Although some layers will look very similar: e.g., an input file with only
# parameters will be populated by a script with only parameters. This layer
# of abstraction is necessary to keep things clean. Once in place we wouldn't
# be thinking about what is in these parameter input files, but just use lists
# of parameters in the scripts to run the simulation that we want to perform.
# We have to think about our LAMMPS input files as "our code". And to think
# about the present scripts as the input files for "our code".
#
# Everything is ran by passing variable argument to LAMMPS by command-line
# using the -var switch
#
# The scripts are written in bash. This is out of generality to be able to
# perform the simulations both in Windows platforms that have consoles that
# can run bash, and on GNU/Linux platform or WSL where bash is default/native
#
# - TODO:
# - test triaxial with and without walls
# - test oedo with and without walls
#
# =========================================================================== #
#

# == GENERAL PATHS TO DIRECT THE WORKFLOW OF FILES == #
#
# Path must be read on their own by LAMMPS command line swtch in order to get the parsing with white space
#
# Path to 'inp' folder where input files are located
path_in="C:\Users\jibri\Documents\POSTDOC_JBC\001 - CODES\LAMMPS\inp"

# Path to the folder where output files (dump,restart,data,log,wall) are saved
path_out="C:\Users\jibri\Documents\POSTDOC_JBC\001 - CODES\LAMMPS\inp\outdir" # `pathstr`

# Suffix appended to output files (dump,restart,data,log,wall): no white space!
fname_suffix="" # If no suffix, use empty string ""

# Restart file used in the simulation (absolute path)
file_restart="C:\Users\jibri\Documents\POSTDOC_JBC\001 - CODES\LAMMPS\inp\outdir\restart.sample_preparation_3" # If no restart file, use empty string "": `restartfile`


date
mkdir "$path_out" # Creates the output directory 
# make a try/catch command 1 || command 2 if dir exists and rm*? NO !!! what if we run from a folder where there are stuff in? Or ask delete or not delete?
cd "$path_in"



# THE ORDER IS CRUCIAL !!! LAMMPS READS THE VALUES ONE AFTER THE OTHER
# The entries of the array must match the order of declaration of the variables
# in the corresponding LAMMPS input files. Modifications MUST be consistent!


# == Variables for input parameters of `in.DEF_init_material_3`== #
var_init_material_3=()
# Geometric and material properties
var_init_material_3+=(8.99944e-05) # Diameter of smallest particle [m]: `dmin`
var_init_material_3+=(0.000399209) # Diameter of largest particle [m]: `dmax`
var_init_material_3+=(2629.0) # Density of particles [kg / m^3]: `rho`
var_init_material_3+=(3.5*1e9) # Young's modulus of particles material [Pa]: `E`
var_init_material_3+=(0.3) # Poisson's ratio of the particles material: `nu`
var_init_material_3+=(0.5) # Friction coefficient between particles: `f`
var_init_material_3+=(2.0*1e-5) # Linear Coefficient of Thermal Expansion [m / K]: `lcte`
var_init_material_3+=(0.0) # Normal contact damping coefficient, DEPRECATED ?: `ncdc`
var_init_material_3+=(0.0) # Tangent contact damping ratio (tan = ratio * normal), DEPRECATED ?: `tcdr`



# == Variables for input parameters of `in.DEF_init_boundary_3`== #
var_init_boundary_3=()
var_init_boundary_3+=(true) # Flag for wall in XX direction: `BC_XX_WALL`
var_init_boundary_3+=(true) # Flag for wall in XX direction: `BC_YY_WALL`
var_init_boundary_3+=(true) # Flag for wall in XX direction: `BC_ZZ_WALL`
var_init_boundary_3+=(0.0) # Friction coefficient between walls and particles: `fwall`
# Wall coordinates file used in the simulation (absolute path)
file_wall="C:\Users\jibri\Documents\POSTDOC_JBC\001 - CODES\LAMMPS\inp\outdir\wall.sample_preparation_3"



# == Variables for input parameters of `in.DEF_param_simulation_3`== #
var_param_simulation_3=()
# Timestep
var_param_simulation_3+=(1e-3) # Maximum overlap of Hertz stiffness (relative to diameter) considered for critical timestep: `overlap_tstep`
var_param_simulation_3+=(0.2) # Fraction of critical timestep sqrt(M/K) used for simulation timestep: `tstep_fraction`
# Damping
var_param_simulation_3+=(0.2) # Non-viscous damping factor of Cundall/Yade-DEM damping: `cundamp0`
var_param_simulation_3+=(0.01) # Viscous damping factor for viscous damping of floaters: `viscdamp0`
# Run
var_param_simulation_3+=(100000) # Number of timestep of classic finite run: `Nrun`
var_param_simulation_3+=(10000000) # Maximum number of timestep of a converging run: `Nmax`
var_param_simulation_3+=(10000) # Frequency (in number of timesteps) of checks (e.g., equilibrium checks): `Ncheck`
var_param_simulation_3+=(50000) # Frequency (in number of timesteps) of thermo output: `Nthermo`
var_param_simulation_3+=(10000) # Frequency (in number of timesteps) of dump output: `Ndump`



# == Variables for input parameters of `in.DEF_param_BC_control_3`== #
var_param_BC_control_3=()
# Kinematics of deformation
var_param_BC_control_3+=(true) # Remapping of coordinates during deformation: `REMAP`
var_param_BC_control_3+=(false) # Relaxing of shear stress during deformation with PBC: `SHEARRELAX`
# Boundary servo-control
var_param_BC_control_3+=(0.8) # Strain decay factor for stress-controlled boundary ([0;1] , 0=no inertia, 1=no decay): `BC_vprev_factor`
var_param_BC_control_3+=(1e-2) # Gain for servo control of strain rate - stress difference relationship: `BC_gain`
var_param_BC_control_3+=(0.25) # Damping of the servo control: `BC_damping`



# == Variables for input parameters of `in.DEF_param_equilibrium_3`== #
var_param_equilibrium_3=()
var_param_equilibrium_3+=(1e-8) # Tolerance on kinetic energy: `tolke0`
var_param_equilibrium_3+=(1e-4) # Tolerance on residual force: `tolfres0`
var_param_equilibrium_3+=(1e-4) # Tolerance on residual torque: `toltqres0`
var_param_equilibrium_3+=(1e-5) # Tolerance on Unbalanced Force Ratio (UFR): `tolufr0`
var_param_equilibrium_3+=(1e-4) # Tolerance on stress: `tolp0`




# =========================================================================== #
# INPUT PARAMETERS FOR MAIN SCRIPTS
# =========================================================================== #

# == Variables for input parameters of `in.DEF_param_sample_preparation_3` == #
var_param_sample_preparation_3=() 
# Sample size
var_param_sample_preparation_3+=(8e3) # Number of particles: `Ntarget`
var_param_sample_preparation_3+=(1) # Aspect ratio of the sample Lz/Lx or Lz/Ly: `aspectratio`
var_param_sample_preparation_3+=(1.5) # Additional padding of walls from periodic cell boundary: `wallpad`
# Random generation
var_param_sample_preparation_3+=(true) # Flag for PSD read from file: `READPSD`
var_param_sample_preparation_3+=(5019) # Random integer seed for uniform particle diameter: `dseed`
var_param_sample_preparation_3+=(7864) # Random integer seed for orientation of clumps upon lattice deposition: `orientseed`
# Mixing
var_param_sample_preparation_3+=(0.3) # Minimum packing fraction of lattice deposition before mixing: `pfmin`
var_param_sample_preparation_3+=(2) # Amount of mixing as a ratio of average particle displacement and average diameter: `mixamount`
var_param_sample_preparation_3+=(3e-3) # Magnitude of the mean mixing velocity as a ratio of average diameter and characteristic time (must be small): `mixintensity`
var_param_sample_preparation_3+=(3254) # Random integer seed for velocity of particles mixing: `mixseed`
var_param_sample_preparation_3+=(0.05) # Magnitude of uniform scaling to separate contacts after mixing: `contact_expansion`
# Percolation
var_param_sample_preparation_3+=(0.45) # Target packing fraction to start slow compression from (cannot be too large): `pf0`
var_param_sample_preparation_3+=(1e-1) # Inertial number for shrinkage from granular gas to target packing fraction: `In0_percolation`
var_param_sample_preparation_3+=(0.001) # Average normalized overlap to stop relaxation: `relax_overlap`
# Equilibrium
var_param_sample_preparation_3+=(1e3) # Isotropic pressure of sample preparation [Pa]: `Ppreparation`
var_param_sample_preparation_3+=(1e-2) # Inertial number for compression to reach target isotropic pressure: `In0_pressure`
var_param_sample_preparation_3+=(1e-3) # Inertial number for final equilibrium (all convergence criteria): `In0_equilibrium`
# Particle Size Distribution atomfile file used in the simulation (absolute path)
file_PSD="C:\Users\jibri\Documents\POSTDOC_JBC\001 - CODES\LAMMPS\inp\PSDtemplate\PSD_Foundry.atom" # If no PSD file, use empty string ""



# = Variables for input parameters of `in.DEF_param_sample_densification_3` = #
var_param_sample_densification_3=() 
# Compression at reduced friction
var_param_sample_densification_3+=(1e3) # Isotropic pressure of sample preparation [Pa]: `Pdensification`
var_param_sample_densification_3+=(0.65) # Reduction of friction (between 0 and 1): `friction_reduction`
var_param_sample_densification_3+=(1e-3) # Inertial number for compression to reach target isotropic pressure: `In0_pressure`
# Contact separation
var_param_sample_densification_3+=(false) # Flag for contact separation after compression at reduced friction: `BREAKCONTACT`
var_param_sample_densification_3+=(0.001) # Magnitude of uniform scaling to separate contacts: `contact_expansion`
var_param_sample_densification_3+=(1e-4) # Magnitude of the mean mixing velocity as a ratio of average diameter and characteristic time (must be very small): `mixintensity`
var_param_sample_densification_3+=(3254) # Random integer seed for velocity of particles mixing: `mixseed`
# Equilibrium
var_param_sample_densification_3+=(1e-3) # Inertial number for final equilibrium (all convergence criteria): `In0_equilibrium`


# = Variables for the input parameters of `in.DEF_parax_triax_3` = #
var_param_triax_3=()
var_param_triax_3+=(true) # Compression triaxial (false=extension triaxial): `COMPRESSION`
var_param_triax_3+=(1e3) # Confining pressure to perform the triaxial test [Pa]: `Pconfine`
var_param_triax_3+=(1e-4) # Inertial number for compression to confining pressure: `In0_confine`
var_param_triax_3+=(5e-4) # Inertial number for axial strain rate of triaxial test: `In0_triax`
var_param_triax_3+=(0.05) # Maximum axial strain (engineering strain, absolute value) [-]: `axialstrain`
var_param_triax_3+=(0.001) # Frequency of thermo output and dumps, given in axial strain [-]: `Noutput_strain`





# We need input parameters for basically all the things that are defined in input files:
# INPUT FILES NEEDING / NOT NEEDING A CORRESPONDING VARIABLE ENTRY:
# in.DEF_param_sample_preparation_3 : YES AND DONE !
# in.DEF_param_sample_densification_3 : YES AND DONE !
# in.DEF_init_material_3 : YES AND DONE !
# in.DEF_init_boundary_3: YES AND DONE
# in.DEF_param_simulation_3 : YES AND DONE !
# in.DEF_param_BC_control : YES AND DONE
# in.DEF_param_equilibrium_3 : YES AND DONE
# in.DEF_param_triax_3 : YES AND DONE



# in.DEF_param_oedo: YES

# in.DEF_param_heating_cooling: YES

# in.DEF_init_post_3 : NO
# 
# in.SET_structure_3 : NO
# in.SET_boundary_3 : NO
# in.SET_macro_properties_3 : NO
# in.SET_conv_3 : NO
# in.SET_oedo_3 : NO
# in.SET_triaxial_3 : NO


# in.DEF_init_pre_3 : NO - MAYBE IN THE FUTURE IF WE USE ELLIPSOIDS
# in.DEF_init_particles_3 : YES - BUT WHEN WE WANT TO DEAL WITH NON-SPHERICAL PARTICLES IN THE FUTURE. KEEP FOR LEGACY AT THE MOMENT

 







#
# THE PARAMETERS FOR SAMPLE PREPARATION AND SAMPLE DENSIFICATION WOULD NOT BE NEEDED FOR OTHER master scripts. Where should we use them? We should put them here still, have a massive bulk of parameters and pick the ones we need

# Homogenization of the Ndump, Nthermo, Nchecks etc output
# What to do with the log files ?

run_MPI=no # use serial or parallel computation
# run this -var switch multiple times ?

echo_switch=log # LAMMPS input script commands echoed in: none, screen, log, both
log_switch=log.lammps # LAMMPS log file
screen_switch='' # LAMMPS thermo output to screen: '-screen none', '-screen <filename>' or '' (empty, for regular console output)

# #echo "	(1) Deposition start"
# mpiexec -n 8 lmp_mpi -in in.MAIN_sample_preparation_3 \
# -var path_out "'$path_out'" \
# -var fname_suffix "'$fname_suffix'" \
# -var file_restart "'$file_restart'" \
# -var var_param_sample_preparation_3 ${var_param_sample_preparation_3[*]} -var file_PSD "'$file_PSD'" \
# -var var_init_material_3 ${var_init_material_3[*]} \
# -var var_init_boundary_3 ${var_init_boundary_3[*]} -var file_wall "'$file_wall'" \
# -var var_param_simulation_3 ${var_param_simulation_3[*]} \
# -var var_param_BC_control_3 ${var_param_BC_control_3[*]} \
# -var var_param_equilibrium_3 ${var_param_equilibrium_3[*]} \
# -log log.sample_preparation_3.lammps \
# $screen_switch
# 
# wait
# 
# mpiexec -n 8 lmp_mpi -in in.MAIN_sample_densification_3 \
# -var path_out "'$path_out'" \
# -var fname_suffix "'$fname_suffix'" \
# -var file_restart "'$file_restart'" \
# -var var_param_sample_densification_3 ${var_param_sample_densification_3[*]} \
# -var var_init_material_3 ${var_init_material_3[*]} \
# -var var_init_boundary_3 ${var_init_boundary_3[*]} -var file_wall "'$file_wall'" \
# -var var_param_simulation_3 ${var_param_simulation_3[*]} \
# -var var_param_BC_control_3 ${var_param_BC_control_3[*]} \
# -var var_param_equilibrium_3 ${var_param_equilibrium_3[*]} \
# -log log.sample_densification_3.lammps \
# $screen_switch
# 
# wait

mpiexec -n 8 lmp_mpi -in in.MAIN_test_triax_3 \
-var path_out "'$path_out'" \
-var fname_suffix "'$fname_suffix'" \
-var file_restart "'$file_restart'" \
-var var_param_triax_3 ${var_param_triax_3[*]} \
-var var_init_material_3 ${var_init_material_3[*]} \
-var var_init_boundary_3 ${var_init_boundary_3[*]} -var file_wall "'$file_wall'" \
-var var_param_simulation_3 ${var_param_simulation_3[*]} \
-var var_param_BC_control_3 ${var_param_BC_control_3[*]} \
-var var_param_equilibrium_3 ${var_param_equilibrium_3[*]} \
-log log.test_triax_3.lammps \
$screen_switch


echo "what?"