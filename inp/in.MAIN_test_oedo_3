# LAMMPS INPUT FILE PERFORMING A UNIAXIAL STRESS-CONTROLLED OEDOMETRIC TEST ON SAMPLES OF 3D GRANULAR SYSTEMS
# file: in.MAIN_test_oedo_3
# author: JBC @ NORTHWESTERN UNIVERSITY, (jibril.coulibaly@gmail.com)
#
# THIS IS A MAIN SCRIPT # ALL VARIABLES AND COMPUTES IN THIS SUBSCRIPT ARE GLOBAL AND GIVEN DEFAULT VALUES THAT CAN BE OVERWRITTEN LOCALLY IN THE MAIN SCRIPT
# THIS SCRIPT MUST ONLY BE CALLED ONE TIME
#
#
# INFO :
# - variable `var_param_oedo_3` (index-style) is passed to LAMMPS by command line switch -var var_param_oedo_3 in script in.DEF_param_oedo_3
# - in the present MAIN script, it contains all the pressure levels to be reached during the oedometric test
#
# TODO:
# -
# - NEED SOMETHING SAFER FOR THE WALLS

####################
# ---- HEADER ---- #
####################

# ---- LOAD INITIAL SAMPLE ---- #

include in.DEF_init_IO
read_restart ${fname_read_restart}

# ---- DEFINITION OF THE PARAMETERS AND LAMMPS REQUIREMENTS ---- #

include in.DEF_param_oedo_3
include in.DEF_init_particles_3
include in.DEF_init_material_3
include in.DEF_init_boundary_3
include in.DEF_param_simulation_3
include in.DEF_param_BC_control_3
include in.DEF_param_equilibrium_3
include in.DEF_init_post_3

# ---- SETUP OF THE BOUNDARY CONDITIONS AND STRUCTURES ---- #

variable READWALL equal true # Read wall coordinates from file. Hardcoded: walls (if any) always read as they existed previously when using a restarted script
include in.SET_structure_3
include in.SET_boundary_3
include in.SET_macro_properties_3

# ---- TIME INTEGRATION ---- #
if "${SPHERE}" then "fix time_integration_particles particles nve/sphere" &
elif "!${SPHERE}" "fix time_integration_clumps particles rigid/small molecule" "fix_modify time_integration_clumps bodyforces early # forces must be calculated early for per-clump damping to work" &
else "print 'Script Error: flag SPHERE should have value true or false and was given $(v_SPHERE)'" "quit"

include in.SET_conv_3

# ---- MATERIAL AND CONTACT LAW ---- #

pair_style	granular
pair_coeff * * hertz/material $E ${ncdc} ${nu} tangential mindlin_rescale/force NULL ${tcdr} $f # Contact law with friction

# ---- DAMPING ---- #

if "${SPHERE}" then &
"fix damp_particles_visct floaters viscous ${viscdamp_lin} # Translational Global damping of particles" &
"fix damp_particles_viscr floaters viscous/sphere ${viscdamp_rot} # Rotational Global damping of particles" &
"fix damp_particles_Cundall particles damping/cundall ${cundamp0} ${cundamp0} # Cundall Translational and Rotational damping of particles" &
elif "!${SPHERE}" &
"fix damp_particles_visct floaters viscous/rigid time_integration_clumps ${viscdamp_lin} ${viscdamp_rot} # Global damping of rigid particles" &
"fix damp_particles_Yade particles cundamp/rigid time_integration_clumps ${cundamp0} ${cundamp0} # Yade Translational and Rotational damping of particles" &
else "print 'Script Error: flag SPHERE should have value true or false and was given $(v_SPHERE)'" "quit"



################################
# ---- OEDOMETRIC TESTING ---- #
################################

variable fname_write_log string "${quote}${pathstr}/log.test_oedo_3${suffixstr}.lammps${quote}" # Name of the log file. Consistent with definition in `script_test_oedo_3`
variable fname_write_log_eq string "${quote}${pathstr}/log.test_oedo_3_eq${suffixstr}.lammps${quote}" # Name of the log file for the equilibrium snapshots. Consistent with definition in `script_test_oedo_3`

compute final_geometry particles property/local patom1 patom2 cutoff radius # Determines the contact topology
compute final_topology particles pair/local force p4 p10 p11 p12 cutoff radius # Determines the contact properties

thermo_style custom step v_voidratio # initialize void ratio
run 0

include in.SET_ref_conf_3 # Defines the reference configuration before the start of the oedometric loading
include in.SET_oedo_3 # Defines void ratio evolution for oedometric tests relative to the reference configuration

## Output initial state

thermo_style custom step v_pxx v_pyy v_pzz v_press v_qdev v_pxy v_pxz v_pyz v_epsz v_epsv v_voidratio v_deltavoidratio v_pf # 16 entries
log ${fname_write_log_eq}
run 0 # Save initial equilibrium state in log file for post-processing
log ${fname_write_log} append


include in.PRESET_BC_control_OEDO_3 # preset oedometric conditions to target pressure
include in.PRESET_equilibrium_all_3 # Sets equilibrium conditions on all variables

### Loop of pressure increases to the values of the Poedo variable ###
label lbl_oedo_test


  variable P0 equal ${var_param_oedo_3} # Reference pressure becomes target vertical pressure stored in `var_param_oedo_3`
  variable In0 equal ${In0_oedo} # Overwrite the inertial number to smaller values for oedometric test

  include in.START_equilibrium_3 # Start equilibrium check
  include in.START_BC_control_3 # Start Boundary controller
  thermo_style custom step v_convke v_convufr v_convfres v_convtqres v_pxx v_pyy v_pzz v_pxy v_pxz v_pyz v_epsz v_epsv v_pf v_deltavoidratio
  thermo ${Nthermo}
  run ${Nmax} # Will be stopped at equilibrium

  include in.STOP_BC_control_3
  include in.STOP_equilibrium_3

  # Output of the results
  variable pzz_kpa equal v_P0/1000
  variable pzzstr string $(v_pzz_kpa:%4.0f) # string of Pressure level in kPa
  variable fname_write_restart string "${quote}${pathstr}/restart.sample_oedo_P${pzzstr}kPa_3${suffixstr}${quote}" # Name of restart file written with absolute path
  variable fname_write_dump_co string "${quote}${pathstr}/dump.co_sample_oedo_P${pzzstr}kPa_3${suffixstr}.lammpstrj${quote}" # Name of coordinates dump file written with absolute path
  variable fname_write_dump_topo string "${quote}${pathstr}/dump.topo_sample_oedo_P${pzzstr}kPa_3${suffixstr}.lammpstrj${quote}" # Name of coordinates dump file written with absolute path
      
  thermo_style custom step v_pxx v_pyy v_pzz v_press v_qdev v_pxy v_pxz v_pyz v_epsz v_epsv v_voidratio v_deltavoidratio v_pf # 16 entries
  dump dump_co particles custom 1 ${fname_write_dump_co} id x y z radius diameter
  dump_modify dump_co sort id
  dump dump_topo particles local 1 ${fname_write_dump_topo} c_final_geometry[*] c_final_topology[*]
  log ${fname_write_log_eq} append
  run 0 # To save state in log file for post-processing
  log ${fname_write_log} append
  undump dump_co
  undump dump_topo

next var_param_oedo_3 # Gets next pressure level
jump SELF lbl_oedo_test

